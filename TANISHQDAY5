QUESTION1
Flipping an Image
Given an n x n binary matrix image, flip the image horizontally, then invert it, and return the resulting image.

To flip an image horizontally means that each row of the image is reversed.

For example, flipping [1,1,0] horizontally results in [0,1,1].
To invert an image means that each 0 is replaced by 1, and each 1 is replaced by 0.

For example, inverting [0,1,1] results in [1,0,0].
int** flipAndInvertImage(int** image, int imageSize, int* imageColSize, int* returnSize, int** returnColumnSizes){
    *returnSize = imageSize;
    *returnColumnSizes = imageColSize;
    for(int i=0; i<imageSize; i++){
        for(int j=0; j<*imageColSize/2; j++){
            int temp = image[i][j];
            image[i][j] = image[i][*imageColSize-j-1];
            image[i][*imageColSize-j-1] = temp;
        }
        for(int l=0; l<*imageColSize; l++){
            if(image[i][l]==0){
                image[i][l]++;
            }
            else{
                image[i][l]--;
            }
        }    
    }
    return image;
}
QUESTION2
 Matrix Diagonal Sum
Given a square matrix mat, return the sum of the matrix diagonals.

Only include the sum of all the elements on the primary diagonal and all the elements on the secondary diagonal that are not part of the primary diagonal.
class Solution {
public:
    int diagonalSum(vector<vector<int>>& mat) {
        int n =mat.size();
        int ans=0;
        for(int i=0;i<n;i++) {
            ans+=mat[i][i];
            ans+= mat[n - 1 - i ][i];

        }
        if (n%2 !=0) {
            ans-=mat[n/2][n/2];

        }
        return ans;
        
    }
};
